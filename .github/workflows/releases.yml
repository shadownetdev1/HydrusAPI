name: Create release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
      # set version in package.json
      - run: npm version --no-git-tag-version --allow-same-version ${{ github.ref_name }}
      # Handle changelogs
      - run: npm install
      - run: node scripts/update_changelog.mjs ${{ github.ref_name }}

      - name: Publish Statements Badge
        uses: wjervis7/vitest-badge-action@v1.0.0
        if: success() || failure() # run whether steps succeed or not
        with:
          result-type: statements
          badge-text: 'Coverage (Statements)'
          upload-badge: false
          vitest-config-path: 'vite.config.mjs'
          summary-path: 'docs/coverage/coverage-summary.json'
          badge-path: 'badges/statements.svg'

      - name: Publish Lines Badge
        uses: wjervis7/vitest-badge-action@v1.0.0
        if: success() || failure() # run whether steps succeed or not
        with:
          result-type: lines
          badge-text: 'Coverage (Lines)'
          upload-badge: false
          vitest-config-path: 'vite.config.mjs'
          summary-path: 'docs/coverage/coverage-summary.json'
          badge-path: 'badges/lines.svg'

      - name: Publish Functions Badge
        uses: wjervis7/vitest-badge-action@v1.0.0
        if: success() || failure() # run whether steps succeed or not
        with:
          result-type: functions
          badge-text: 'Coverage (Functions)'
          upload-badge: false
          vitest-config-path: 'vite.config.mjs'
          summary-path: 'docs/coverage/coverage-summary.json'
          badge-path: 'badges/functions.svg'

      - name: Publish Branches Badge
        uses: wjervis7/vitest-badge-action@v1.0.0
        if: success() || failure() # run whether steps succeed or not
        with:
          result-type: branches
          badge-text: 'Coverage (Branches)'
          upload-badge: false
          vitest-config-path: 'vite.config.mjs'
          summary-path: 'docs/coverage/coverage-summary.json'
          badge-path: 'badges/branches.svg'

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          branch: main
          commit_message: Updated changelogs for release
          file_pattern: 'badges/* CHANGELOG.MD CHANGELOG.UNCOMMITTED.MD package.json'
      # create type def files
      - run: npm install
      - run: npm run type-defs
      # minify index.js and save as hydrusapi.${{ github.ref_name }}.min.js
      - run: npm install --save-dev @node-minify/cli@9.0.2 @node-minify/uglify-js@9.0.1
      - run: npx node-minify --compressor uglify-js --input 'index.js' --output 'hydrusapi.${{ github.ref_name }}.min.js'
      # copy index.js to hydrusapi.${{ github.ref_name }}.js
      - run: cp -f index.js hydrusapi.${{ github.ref_name }}.js

      # copy types/index.d.ts to hydrusapi.${{ github.ref_name }}.d.ts
      - run: cp -f types/index.d.ts hydrusapi.${{ github.ref_name }}.d.ts
      # TODO: edit the first line of hydrusapi.${{ github.ref_name }}.d.ts to point to hydrusapi.types.${{ github.ref_name }}.d.ts
      # copy types/types.d.ts to hydrusapi.types.${{ github.ref_name }}.d.ts
      - run: cp -f types/types.d.ts hydrusapi.types.${{ github.ref_name }}.d.ts
      # zip release files
      # The files in this zip should mirror the files property in `package.json`
      - run: zip hydrusapi.${{ github.ref_name }}.zip types CHANGELOG.MD index.js liscense.txt tsconfig.json README.MD
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          prerelease: false
          body_path: TEMP_LOG.MD
          fail_on_unmatched_files: true
          preserve_order: true
          files: |
            hydrusapi.${{ github.ref_name }}.js
            hydrusapi.${{ github.ref_name }}.min.js
            hydrusapi.${{ github.ref_name }}.d.ts
            hydrusapi.types.${{ github.ref_name }}.d.ts
            hydrusapi.${{ github.ref_name }}.zip

      # Publish to NPM
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
